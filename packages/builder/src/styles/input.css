@import 'tailwindcss';

@import './button.css' layer(utilities);

@theme {
  --font-*: initial;
  --font-sans:
    Inter, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
    'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';

  --color-*: initial;
  --color-white: #ffffff;

  --color-success-50: rgb(from var(--color-green-50) r g b);
  --color-success-100: rgb(from var(--color-green-100) r g b);
  --color-success-200: rgb(from var(--color-green-200) r g b);
  --color-success-300: rgb(from var(--color-green-300) r g b);
  --color-success-400: rgb(from var(--color-green-400) r g b);
  --color-success-600: rgb(from var(--color-green-600) r g b);
  --color-success-700: rgb(from var(--color-green-700) r g b);
  --color-success-800: rgb(from var(--color-green-800) r g b);
  --color-success-900: rgb(from var(--color-green-900) r g b);
  --color-success: rgb(from var(--color-green-500) r g b);

  --color-primary-50: rgb(from var(--color-primary-50) r g b);
  --color-primary-100: rgb(from var(--color-primary-100) r g b);
  --color-primary-200: rgb(from var(--color-primary-200) r g b);
  --color-primary-300: rgb(from var(--color-primary-300) r g b);
  --color-primary-400: rgb(from var(--color-primary-400) r g b);
  --color-primary-600: rgb(from var(--color-primary-600) r g b);
  --color-primary-700: rgb(from var(--color-primary-700) r g b);
  --color-primary-800: rgb(from var(--color-primary-800) r g b);
  --color-primary-900: rgb(from var(--color-primary-900) r g b);
  --color-primary: rgb(from var(--color-primary-500) r g b);

  --color-neutral-50: rgb(from var(--color-neutral-50) r g b);
  --color-neutral-100: rgb(from var(--color-neutral-100) r g b);
  --color-neutral-200: rgb(from var(--color-neutral-200) r g b);
  --color-neutral-300: rgb(from var(--color-neutral-300) r g b);
  --color-neutral-400: rgb(from var(--color-neutral-400) r g b);
  --color-neutral-500: rgb(from var(--color-neutral-500) r g b);
  --color-neutral-600: rgb(from var(--color-neutral-600) r g b);
  --color-neutral-700: rgb(from var(--color-neutral-700) r g b);
  --color-neutral-800: rgb(from var(--color-neutral-800) r g b);
  --color-neutral-900: rgb(from var(--color-neutral-900) r g b);

  --color-danger-50: rgb(from var(--color-red-50) r g b);
  --color-danger-100: rgb(from var(--color-red-100) r g b);
  --color-danger-200: rgb(from var(--color-red-200) r g b);
  --color-danger-300: rgb(from var(--color-red-300) r g b);
  --color-danger-400: rgb(from var(--color-red-400) r g b);
  --color-danger-600: rgb(from var(--color-red-600) r g b);
  --color-danger-700: rgb(from var(--color-red-700) r g b);
  --color-danger-800: rgb(from var(--color-red-800) r g b);
  --color-danger-900: rgb(from var(--color-red-900) r g b);
  --color-danger: rgb(from var(--color-red-500) r g b);

  --animate-collapsible-down: collapsible-down 0.2s ease-out;
  --animate-collapsible-up: collapsible-up 0.2s ease-out;

  @keyframes collapsible-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-collapsible-content-height);
    }
  }
  @keyframes collapsible-up {
    from {
      height: var(--radix-collapsible-content-height);
    }
    to {
      height: 0;
    }
  }
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

:root {
  --color-background: #f8fafc;

  --color-white: #ffffff;

  --color-neutral-50: #f2f2f2;
  --color-neutral-100: #dddddd;
  --color-neutral-200: #c8c8c8;
  --color-neutral-300: #b3b3b3;
  --color-neutral-400: #9e9e9e;
  --color-neutral-500: #888888;
  --color-neutral-600: #737373;
  --color-neutral-700: #5e5e5e;
  --color-neutral-800: #494949;
  --color-neutral-900: #343434;

  --color-primary-50: #f8fafc;
  --color-primary-100: #e9eff5;
  --color-primary-200: #cedde9;
  --color-primary-300: #a3c1d6;
  --color-primary-400: #729fbe;
  --color-primary-500: #5083a7;
  --color-primary-600: #3d698c;
  --color-primary-700: #325572;
  --color-primary-800: #2d495f;
  --color-primary-900: #293e51;

  --color-red-50: #edcccc;
  --color-red-100: #e6b3b3;
  --color-red-200: #e09999;
  --color-red-300: #cf7777;
  --color-red-400: #da7f7f;
  --color-red-500: #d14747;
  --color-red-600: #b73e3e;
  --color-red-700: #9d3535;
  --color-red-800: #832c2c;
  --color-red-900: #692424;

  --color-green-50: #e6f9ed;
  --color-green-100: #c3f0d6;
  --color-green-200: #8ee6b7;
  --color-green-300: #5edb9b;
  --color-green-400: #2fc97a;
  --color-green-500: #1fa463;
  --color-green-600: #18804e;
  --color-green-700: #156642;
  --color-green-800: #124f36;
  --color-green-900: #0e3a29;
}

html {
  font-size: 16px;
}

div.tiptap:focus-visible {
  outline: none;
}

* {
  scrollbar-color: var(--color-neutral-200) transparent;
  scrollbar-width: thin;
}

.typography-body1 {
  font-size: 1rem;
  line-height: 140%;
}

.typography-body2 {
  font-size: 0.875rem;
  line-height: 140%;
}

.typography-body3 {
  font-size: 0.75rem;
  line-height: 140%;
}

.typography-body4 {
  font-size: 0.625rem;
  line-height: 160%;
}

.typography-button1 {
  font-size: 1rem;
  line-height: 110%;
}

.typography-button2 {
  font-size: 0.875rem;
  line-height: 110%;
}

.typography-button3 {
  font-size: 0.75rem;
  line-height: 110%;
}

.typography-link {
  font-size: 1rem;
  line-height: 140%;
}

/* styles.css */
.accordion-content {
  overflow: hidden;
}

.accordion-content[data-state="open"] {
  animation: slideDown 200ms ease-out;
}

.accordion-content[data-state="closed"] {
  animation: slideUp 200ms ease-out;
}

@keyframes slideDown {
  from {
    height: 0;
  }
  to {
    height: var(--radix-accordion-content-height);
  }
}

@keyframes slideUp {
  from {
    height: var(--radix-accordion-content-height);
  }
  to {
    height: 0;
  }
}

.hide-input-arrow[type="number"]::-webkit-outer-spin-button,
.hide-input-arrow[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.hide-input-arrow[type="number"] {
  -moz-appearance: textfield;
}

/* Rich Text Editor Styles */
.rich-text-editor {
  /* Custom styles for TipTap editor content */
}

.rich-text-editor .ProseMirror {
  outline: none;
  line-height: 1.6;
}

.rich-text-editor .ProseMirror h1 {
  font-size: 1.5rem;
  font-weight: 700;
  margin: 0.5rem 0;
  line-height: 1.2;
}

.rich-text-editor .ProseMirror h2 {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0.5rem 0;
  line-height: 1.3;
}

.rich-text-editor .ProseMirror h3 {
  font-size: 1.125rem;
  font-weight: 600;
  margin: 0.5rem 0;
  line-height: 1.4;
}

.rich-text-editor .ProseMirror p {
  margin: 0.25rem 0;
}

.rich-text-editor .ProseMirror ul {
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}

.rich-text-editor .ProseMirror ol {
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}

.rich-text-editor .ProseMirror li {
  margin: 0.25rem 0;
}

.rich-text-editor .ProseMirror a {
  color: var(--color-primary-500);
  text-decoration: underline;
  cursor: pointer;
}

.rich-text-editor .ProseMirror a:hover {
  color: var(--color-primary-600);
}

.rich-text-editor .ProseMirror strong {
  font-weight: 700;
}

.rich-text-editor .ProseMirror em {
  font-style: italic;
}

.rich-text-editor .ProseMirror u {
  text-decoration: underline;
}

.rich-text-editor .ProseMirror s {
  text-decoration: line-through;
}

.rich-text-editor .ProseMirror sup {
  font-size: 0.75em;
  vertical-align: super;
}

.rich-text-editor .ProseMirror sub {
  font-size: 0.75em;
  vertical-align: sub;
}

.rich-text-editor .ProseMirror ol,
.rich-text-editor .ProseMirror ul {
  list-style-position: outside;
}

.rich-text-editor .ProseMirror ol {
  list-style: decimal;
}

.rich-text-editor .ProseMirror ul {
  list-style: disc;
}

/* Font size support */
.rich-text-editor .ProseMirror [style*="font-size"] {
  /* Ensure font-size styles are preserved and rendered correctly */
}

.rich-text-editor .ProseMirror span[style*="font-size"] {
  display: inline;
}

/* Placeholder styling */
.rich-text-editor .ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: var(--color-neutral-400);
  pointer-events: none;
  height: 0;
}
