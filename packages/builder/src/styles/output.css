/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --spacing: 0.25rem;
    --container-4xl: 56rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --leading-snug: 1.375;
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --blur-xs: 4px;
    --blur-sm: 8px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --font-sans: Inter, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
    'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
    --color-white: #ffffff;
    --color-success-50: rgb(from var(--color-green-50) r g b);
    --color-success-200: rgb(from var(--color-green-200) r g b);
    --color-success-400: rgb(from var(--color-green-400) r g b);
    --color-success-600: rgb(from var(--color-green-600) r g b);
    --color-success: rgb(from var(--color-green-500) r g b);
    --color-primary-50: rgb(from var(--color-primary-50) r g b);
    --color-primary-100: rgb(from var(--color-primary-100) r g b);
    --color-primary-200: rgb(from var(--color-primary-200) r g b);
    --color-primary-300: rgb(from var(--color-primary-300) r g b);
    --color-primary-400: rgb(from var(--color-primary-400) r g b);
    --color-primary-600: rgb(from var(--color-primary-600) r g b);
    --color-primary-700: rgb(from var(--color-primary-700) r g b);
    --color-primary-800: rgb(from var(--color-primary-800) r g b);
    --color-primary-900: rgb(from var(--color-primary-900) r g b);
    --color-primary: rgb(from var(--color-primary-500) r g b);
    --color-neutral-50: rgb(from var(--color-neutral-50) r g b);
    --color-neutral-100: rgb(from var(--color-neutral-100) r g b);
    --color-neutral-200: rgb(from var(--color-neutral-200) r g b);
    --color-neutral-300: rgb(from var(--color-neutral-300) r g b);
    --color-neutral-400: rgb(from var(--color-neutral-400) r g b);
    --color-neutral-500: rgb(from var(--color-neutral-500) r g b);
    --color-neutral-600: rgb(from var(--color-neutral-600) r g b);
    --color-neutral-700: rgb(from var(--color-neutral-700) r g b);
    --color-neutral-800: rgb(from var(--color-neutral-800) r g b);
    --color-neutral-900: rgb(from var(--color-neutral-900) r g b);
    --color-danger-50: rgb(from var(--color-red-50) r g b);
    --color-danger-100: rgb(from var(--color-red-100) r g b);
    --color-danger-400: rgb(from var(--color-red-400) r g b);
    --color-danger-600: rgb(from var(--color-red-600) r g b);
    --color-danger-700: rgb(from var(--color-red-700) r g b);
    --color-danger: rgb(from var(--color-red-500) r g b);
    --animate-collapsible-down: collapsible-down 0.2s ease-out;
    --animate-collapsible-up: collapsible-up 0.2s ease-out;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .invisible {
    visibility: hidden;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-full {
    top: 100%;
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-0\.5 {
    bottom: calc(var(--spacing) * 0.5);
  }
  .bottom-full {
    bottom: 100%;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-50 {
    z-index: 50;
  }
  .z-99 {
    z-index: 99;
  }
  .z-100 {
    z-index: 100;
  }
  .z-999 {
    z-index: 999;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }
  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .ms-2 {
    margin-inline-start: calc(var(--spacing) * 2);
  }
  .me-1 {
    margin-inline-end: calc(var(--spacing) * 1);
  }
  .me-2 {
    margin-inline-end: calc(var(--spacing) * 2);
  }
  .mt-0\.5 {
    margin-top: calc(var(--spacing) * 0.5);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-1\.5 {
    margin-bottom: calc(var(--spacing) * 1.5);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .size-3 {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }
  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .h-0 {
    height: calc(var(--spacing) * 0);
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .h-2\.5 {
    height: calc(var(--spacing) * 2.5);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-7 {
    height: calc(var(--spacing) * 7);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-14 {
    height: calc(var(--spacing) * 14);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-\[3px\] {
    height: 3px;
  }
  .h-full {
    height: 100%;
  }
  .h-px {
    height: 1px;
  }
  .h-screen {
    height: 100vh;
  }
  .max-h-56 {
    max-height: calc(var(--spacing) * 56);
  }
  .max-h-60 {
    max-height: calc(var(--spacing) * 60);
  }
  .max-h-full {
    max-height: 100%;
  }
  .min-h-0 {
    min-height: calc(var(--spacing) * 0);
  }
  .min-h-20 {
    min-height: calc(var(--spacing) * 20);
  }
  .min-h-32 {
    min-height: calc(var(--spacing) * 32);
  }
  .min-h-64 {
    min-height: calc(var(--spacing) * 64);
  }
  .min-h-full {
    min-height: 100%;
  }
  .w-0 {
    width: calc(var(--spacing) * 0);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-2\.5 {
    width: calc(var(--spacing) * 2.5);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-3\/4 {
    width: calc(3/4 * 100%);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-24 {
    width: calc(var(--spacing) * 24);
  }
  .w-28 {
    width: calc(var(--spacing) * 28);
  }
  .w-44 {
    width: calc(var(--spacing) * 44);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-80 {
    width: calc(var(--spacing) * 80);
  }
  .w-160 {
    width: calc(var(--spacing) * 160);
  }
  .w-\[16rem\] {
    width: 16rem;
  }
  .w-\[200px\] {
    width: 200px;
  }
  .w-\[280px\] {
    width: 280px;
  }
  .w-full {
    width: 100%;
  }
  .w-px {
    width: 1px;
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-40 {
    max-width: calc(var(--spacing) * 40);
  }
  .max-w-56 {
    max-width: calc(var(--spacing) * 56);
  }
  .max-w-full {
    max-width: 100%;
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-24 {
    min-width: calc(var(--spacing) * 24);
  }
  .min-w-32 {
    min-width: calc(var(--spacing) * 32);
  }
  .min-w-48 {
    min-width: calc(var(--spacing) * 48);
  }
  .min-w-\[16px\] {
    min-width: 16px;
  }
  .min-w-\[24px\] {
    min-width: 24px;
  }
  .min-w-\[80px\] {
    min-width: 80px;
  }
  .min-w-\[120px\] {
    min-width: 120px;
  }
  .flex-1 {
    flex: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .grow {
    flex-grow: 1;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-x-full {
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-0 {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-0\.5 {
    --tw-translate-x: calc(var(--spacing) * 0.5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-1\/2 {
    --tw-translate-y: calc(1/2 * 100%);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-full {
    --tw-translate-y: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .rotate-180 {
    rotate: 180deg;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-pulse {
    animation: var(--animate-pulse);
  }
  .cursor-default {
    cursor: default;
  }
  .cursor-grab {
    cursor: grab;
  }
  .cursor-grabbing {
    cursor: grabbing;
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .cursor-text {
    cursor: text;
  }
  .touch-none {
    touch-action: none;
  }
  .resize {
    resize: both;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-7 {
    grid-template-columns: repeat(7, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .content-start {
    align-content: flex-start;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .items-stretch {
    align-items: stretch;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-0\.5 {
    gap: calc(var(--spacing) * 0.5);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-x-1 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .space-x-3 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .self-stretch {
    align-self: stretch;
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-\[10px\] {
    border-radius: 10px;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xs {
    border-radius: var(--radius-xs);
  }
  .rounded-t-lg {
    border-top-left-radius: var(--radius-lg);
    border-top-right-radius: var(--radius-lg);
  }
  .rounded-b-sm {
    border-bottom-right-radius: var(--radius-sm);
    border-bottom-left-radius: var(--radius-sm);
  }
  .rounded-br-none {
    border-bottom-right-radius: 0;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-s {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 1px;
  }
  .border-e {
    border-inline-end-style: var(--tw-border-style);
    border-inline-end-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-t-2 {
    border-top-style: var(--tw-border-style);
    border-top-width: 2px;
  }
  .border-t-\[0\.5px\] {
    border-top-style: var(--tw-border-style);
    border-top-width: 0.5px;
  }
  .border-r-2 {
    border-right-style: var(--tw-border-style);
    border-right-width: 2px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-l-2 {
    border-left-style: var(--tw-border-style);
    border-left-width: 2px;
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-danger {
    border-color: var(--color-danger);
  }
  .border-danger-400 {
    border-color: var(--color-danger-400);
  }
  .border-neutral-100 {
    border-color: var(--color-neutral-100);
  }
  .border-neutral-100\/30 {
    border-color: color-mix(in srgb, rgb(from var(--color-neutral-100) r g b) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-neutral-100) 30%, transparent);
    }
  }
  .border-neutral-200 {
    border-color: var(--color-neutral-200);
  }
  .border-neutral-300 {
    border-color: var(--color-neutral-300);
  }
  .border-neutral-400 {
    border-color: var(--color-neutral-400);
  }
  .border-primary {
    border-color: var(--color-primary);
  }
  .border-primary-200 {
    border-color: var(--color-primary-200);
  }
  .border-primary-400 {
    border-color: var(--color-primary-400);
  }
  .border-success-400 {
    border-color: var(--color-success-400);
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-e-neutral-200 {
    border-inline-end-color: var(--color-neutral-200);
  }
  .border-t-neutral-400 {
    border-top-color: var(--color-neutral-400);
  }
  .border-t-neutral-800 {
    border-top-color: var(--color-neutral-800);
  }
  .bg-danger {
    background-color: var(--color-danger);
  }
  .bg-danger-50 {
    background-color: var(--color-danger-50);
  }
  .bg-danger-50\/20 {
    background-color: color-mix(in srgb, rgb(from var(--color-red-50) r g b) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-danger-50) 20%, transparent);
    }
  }
  .bg-danger-100\/30 {
    background-color: color-mix(in srgb, rgb(from var(--color-red-100) r g b) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-danger-100) 30%, transparent);
    }
  }
  .bg-neutral-50 {
    background-color: var(--color-neutral-50);
  }
  .bg-neutral-100 {
    background-color: var(--color-neutral-100);
  }
  .bg-neutral-100\! {
    background-color: var(--color-neutral-100) !important;
  }
  .bg-neutral-100\/20 {
    background-color: color-mix(in srgb, rgb(from var(--color-neutral-100) r g b) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-100) 20%, transparent);
    }
  }
  .bg-neutral-100\/30 {
    background-color: color-mix(in srgb, rgb(from var(--color-neutral-100) r g b) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-100) 30%, transparent);
    }
  }
  .bg-neutral-100\/40 {
    background-color: color-mix(in srgb, rgb(from var(--color-neutral-100) r g b) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-100) 40%, transparent);
    }
  }
  .bg-neutral-100\/50 {
    background-color: color-mix(in srgb, rgb(from var(--color-neutral-100) r g b) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-100) 50%, transparent);
    }
  }
  .bg-neutral-200 {
    background-color: var(--color-neutral-200);
  }
  .bg-neutral-200\/80\! {
    background-color: color-mix(in srgb, rgb(from var(--color-neutral-200) r g b) 80%, transparent) !important;
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-200) 80%, transparent) !important;
    }
  }
  .bg-neutral-300 {
    background-color: var(--color-neutral-300);
  }
  .bg-neutral-400 {
    background-color: var(--color-neutral-400);
  }
  .bg-neutral-800 {
    background-color: var(--color-neutral-800);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-primary-50 {
    background-color: var(--color-primary-50);
  }
  .bg-primary-100 {
    background-color: var(--color-primary-100);
  }
  .bg-primary-200 {
    background-color: var(--color-primary-200);
  }
  .bg-primary-400 {
    background-color: var(--color-primary-400);
  }
  .bg-primary-600 {
    background-color: var(--color-primary-600);
  }
  .bg-success {
    background-color: var(--color-success);
  }
  .bg-success-50\/20 {
    background-color: color-mix(in srgb, rgb(from var(--color-green-50) r g b) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-success-50) 20%, transparent);
    }
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .fill-neutral-400 {
    fill: var(--color-neutral-400);
  }
  .object-contain {
    object-fit: contain;
  }
  .p-0\.5 {
    padding: calc(var(--spacing) * 0.5);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-2\.5 {
    padding: calc(var(--spacing) * 2.5);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-\[2px\] {
    padding: 2px;
  }
  .px-0\.5 {
    padding-inline: calc(var(--spacing) * 0.5);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3\.5 {
    padding-block: calc(var(--spacing) * 3.5);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .ps-1 {
    padding-inline-start: calc(var(--spacing) * 1);
  }
  .ps-2 {
    padding-inline-start: calc(var(--spacing) * 2);
  }
  .pe-1 {
    padding-inline-end: calc(var(--spacing) * 1);
  }
  .pe-2 {
    padding-inline-end: calc(var(--spacing) * 2);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .text-center {
    text-align: center;
  }
  .text-end {
    text-align: end;
  }
  .text-left {
    text-align: left;
  }
  .text-start {
    text-align: start;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .leading-snug {
    --tw-leading: var(--leading-snug);
    line-height: var(--leading-snug);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-ellipsis {
    text-overflow: ellipsis;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .whitespace-pre {
    white-space: pre;
  }
  .text-danger {
    color: var(--color-danger);
  }
  .text-danger-400 {
    color: var(--color-danger-400);
  }
  .text-danger-600 {
    color: var(--color-danger-600);
  }
  .text-danger-700 {
    color: var(--color-danger-700);
  }
  .text-neutral-50 {
    color: var(--color-neutral-50);
  }
  .text-neutral-200 {
    color: var(--color-neutral-200);
  }
  .text-neutral-300 {
    color: var(--color-neutral-300);
  }
  .text-neutral-400 {
    color: var(--color-neutral-400);
  }
  .text-neutral-500 {
    color: var(--color-neutral-500);
  }
  .text-neutral-600 {
    color: var(--color-neutral-600);
  }
  .text-neutral-700 {
    color: var(--color-neutral-700);
  }
  .text-neutral-800 {
    color: var(--color-neutral-800);
  }
  .text-neutral-900 {
    color: var(--color-neutral-900);
  }
  .text-primary-600 {
    color: var(--color-primary-600);
  }
  .text-primary-700 {
    color: var(--color-primary-700);
  }
  .text-primary-800 {
    color: var(--color-primary-800);
  }
  .text-success {
    color: var(--color-success);
  }
  .text-success-200 {
    color: var(--color-success-200);
  }
  .text-success-600 {
    color: var(--color-success-600);
  }
  .text-white {
    color: var(--color-white);
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .underline {
    text-decoration-line: underline;
  }
  .placeholder-neutral-400 {
    &::placeholder {
      color: var(--color-neutral-400);
    }
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-60 {
    opacity: 60%;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-0 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
    @media (forced-colors: active) {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .outline-2 {
    outline-style: var(--tw-outline-style);
    outline-width: 2px;
  }
  .-outline-offset-2 {
    outline-offset: calc(2px * -1);
  }
  .outline-\[\#00000000\] {
    outline-color: #00000000;
  }
  .outline-danger-400\! {
    outline-color: var(--color-danger-400) !important;
  }
  .outline-primary {
    outline-color: var(--color-primary);
  }
  .outline-primary\! {
    outline-color: var(--color-primary) !important;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-sm {
    --tw-blur: blur(var(--blur-sm));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-xs {
    --tw-backdrop-blur: blur(var(--blur-xs));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .will-change-transform {
    will-change: transform;
  }
  .outline-solid {
    --tw-outline-style: solid;
    outline-style: solid;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .group-focus-within\:visible {
    &:is(:where(.group):focus-within *) {
      visibility: visible;
    }
  }
  .group-focus-within\:border-neutral-500 {
    &:is(:where(.group):focus-within *) {
      border-color: var(--color-neutral-500);
    }
  }
  .group-hover\:visible {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        visibility: visible;
      }
    }
  }
  .group-hover\:text-neutral-800 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-neutral-800);
      }
    }
  }
  .group-hover\:text-primary-300 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-primary-300);
      }
    }
  }
  .group-hover\:text-primary-400 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-primary-400);
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-data-\[state\=open\]\:-rotate-180 {
    &:is(:where(.group)[data-state="open"] *) {
      rotate: calc(180deg * -1);
    }
  }
  .first\:rounded-t-md {
    &:first-child {
      border-top-left-radius: var(--radius-md);
      border-top-right-radius: var(--radius-md);
    }
  }
  .last\:rounded-b-md {
    &:last-child {
      border-bottom-right-radius: var(--radius-md);
      border-bottom-left-radius: var(--radius-md);
    }
  }
  .focus-within\:outline-1 {
    &:focus-within {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .focus-within\:outline-primary {
    &:focus-within {
      outline-color: var(--color-primary);
    }
  }
  .focus-within\:outline-solid {
    &:focus-within {
      --tw-outline-style: solid;
      outline-style: solid;
    }
  }
  .hover\:scale-100 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-105 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:border-neutral-300 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-neutral-300);
      }
    }
  }
  .hover\:border-primary {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-primary);
      }
    }
  }
  .hover\:border-primary-400 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-primary-400);
      }
    }
  }
  .hover\:bg-danger-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-danger-50);
      }
    }
  }
  .hover\:bg-danger-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-danger-600);
      }
    }
  }
  .hover\:bg-neutral-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-50);
      }
    }
  }
  .hover\:bg-neutral-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-100);
      }
    }
  }
  .hover\:bg-neutral-100\/50 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, rgb(from var(--color-neutral-100) r g b) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral-100) 50%, transparent);
        }
      }
    }
  }
  .hover\:bg-neutral-100\/70 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, rgb(from var(--color-neutral-100) r g b) 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral-100) 70%, transparent);
        }
      }
    }
  }
  .hover\:bg-neutral-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-200);
      }
    }
  }
  .hover\:bg-neutral-200\/30 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, rgb(from var(--color-neutral-200) r g b) 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral-200) 30%, transparent);
        }
      }
    }
  }
  .hover\:bg-primary-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary-100);
      }
    }
  }
  .hover\:bg-primary-300\/10 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, rgb(from var(--color-primary-300) r g b) 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-primary-300) 10%, transparent);
        }
      }
    }
  }
  .hover\:bg-primary-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary-600);
      }
    }
  }
  .hover\:bg-success-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-success-600);
      }
    }
  }
  .hover\:text-danger {
    &:hover {
      @media (hover: hover) {
        color: var(--color-danger);
      }
    }
  }
  .hover\:text-neutral-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-500);
      }
    }
  }
  .hover\:text-neutral-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-700);
      }
    }
  }
  .hover\:text-neutral-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-neutral-800);
      }
    }
  }
  .hover\:text-primary {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  .hover\:text-primary-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary-700);
      }
    }
  }
  .focus\:bg-neutral-100 {
    &:focus {
      background-color: var(--color-neutral-100);
    }
  }
  .focus\:ring-0 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:outline-hidden {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .focus\:outline-primary {
    &:focus {
      outline-color: var(--color-primary);
    }
  }
  .focus-visible\:ring-2 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:outline-1 {
    &:focus-visible {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
    }
  }
  .focus-visible\:outline-primary {
    &:focus-visible {
      outline-color: var(--color-primary);
    }
  }
  .focus-visible\:outline-solid {
    &:focus-visible {
      --tw-outline-style: solid;
      outline-style: solid;
    }
  }
  .data-disabled\:cursor-default {
    &[data-disabled] {
      cursor: default;
    }
  }
  .data-disabled\:border-neutral-400 {
    &[data-disabled] {
      border-color: var(--color-neutral-400);
    }
  }
  .data-disabled\:bg-neutral-400 {
    &[data-disabled] {
      background-color: var(--color-neutral-400);
    }
  }
  .data-\[state\=active\]\:text-primary {
    &[data-state="active"] {
      color: var(--color-primary);
    }
  }
  .data-\[state\=checked\]\:translate-x-\[14px\] {
    &[data-state="checked"] {
      --tw-translate-x: 14px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .data-\[state\=checked\]\:border-primary {
    &[data-state="checked"] {
      border-color: var(--color-primary);
    }
  }
  .data-\[state\=checked\]\:bg-primary {
    &[data-state="checked"] {
      background-color: var(--color-primary);
    }
  }
  .data-\[state\=closed\]\:animate-collapsible-up {
    &[data-state="closed"] {
      animation: var(--animate-collapsible-up);
    }
  }
  .data-\[state\=open\]\:animate-collapsible-down {
    &[data-state="open"] {
      animation: var(--animate-collapsible-down);
    }
  }
  .sm\:col-span-1 {
    @media (width >= 40rem) {
      grid-column: span 1 / span 1;
    }
  }
  .sm\:block {
    @media (width >= 40rem) {
      display: block;
    }
  }
  .sm\:grid-cols-3 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .sm\:space-y-4 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .sm\:px-4 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .sm\:py-6 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 6);
    }
  }
  .md\:grid-cols-5 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }
  .\[\&_\.rcp-alpha\]\:h-1\.5 {
    & .rcp-alpha {
      height: calc(var(--spacing) * 1.5);
    }
  }
  .\[\&_\.rcp-alpha-cursor\]\:h-4 {
    & .rcp-alpha-cursor {
      height: calc(var(--spacing) * 4);
    }
  }
  .\[\&_\.rcp-alpha-cursor\]\:w-4 {
    & .rcp-alpha-cursor {
      width: calc(var(--spacing) * 4);
    }
  }
  .\[\&_\.rcp-alpha-cursor\]\:-translate-x-2 {
    & .rcp-alpha-cursor {
      --tw-translate-x: calc(var(--spacing) * -2);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .\[\&_\.rcp-alpha-cursor\]\:-translate-y-1 {
    & .rcp-alpha-cursor {
      --tw-translate-y: calc(var(--spacing) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .\[\&_\.rcp-hue\]\:h-1\.5 {
    & .rcp-hue {
      height: calc(var(--spacing) * 1.5);
    }
  }
  .\[\&_\.rcp-hue-cursor\]\:h-4 {
    & .rcp-hue-cursor {
      height: calc(var(--spacing) * 4);
    }
  }
  .\[\&_\.rcp-hue-cursor\]\:w-4 {
    & .rcp-hue-cursor {
      width: calc(var(--spacing) * 4);
    }
  }
  .\[\&_\.rcp-hue-cursor\]\:-translate-x-2 {
    & .rcp-hue-cursor {
      --tw-translate-x: calc(var(--spacing) * -2);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .\[\&_\.rcp-hue-cursor\]\:-translate-y-1 {
    & .rcp-hue-cursor {
      --tw-translate-y: calc(var(--spacing) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .\[\&_\.rcp-saturation\]\:rounded-md {
    & .rcp-saturation {
      border-radius: var(--radius-md);
    }
  }
  .\[\&_\.rcp-saturation-cursor\]\:h-4 {
    & .rcp-saturation-cursor {
      height: calc(var(--spacing) * 4);
    }
  }
  .\[\&_\.rcp-saturation-cursor\]\:w-4 {
    & .rcp-saturation-cursor {
      width: calc(var(--spacing) * 4);
    }
  }
  .\[\&_\.rcp-saturation-cursor\]\:-translate-x-2 {
    & .rcp-saturation-cursor {
      --tw-translate-x: calc(var(--spacing) * -2);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .\[\&_\.rcp-saturation-cursor\]\:-translate-y-2 {
    & .rcp-saturation-cursor {
      --tw-translate-y: calc(var(--spacing) * -2);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .\[\&\:not\(\:has\(div\[data-field\=true\]\:hover\)\)\]\:hover\:outline-neutral-100 {
    &:not(:has(div[data-field=true]:hover)) {
      &:hover {
        @media (hover: hover) {
          outline-color: var(--color-neutral-100);
        }
      }
    }
  }
}
@layer utilities {
  .primary {
    --btn-bg-color: var(--color-primary-500);
    --btn-bg-color-hover: var(--color-primary-600);
    --btn-text-color: var(--color-neutral-50);
    --btn-text-color-hover: var(--color-primary-50);
    --btn-border-color: var(--color-primary-500);
    --btn-border-color-hover: var(--color-primary-600);
    --btn-bg-color-disabled: var(--color-neutral-200);
    --btn-text-color-disabled: var(--color-neutral-500);
  }
  .secondary {
    --btn-bg-color: var(--color-neutral-100);
    --btn-bg-color-hover: var(--color-neutral-200);
    --btn-text-color: var(--color-neutral-700);
    --btn-text-color-hover: var(--color-neutral-800);
    --btn-border-color: var(--color-neutral-200);
    --btn-border-color-hover: var(--color-neutral-300);
    --btn-bg-color-disabled: var(--color-neutral-200);
    --btn-text-color-disabled: var(--color-neutral-600);
  }
  .danger {
    --btn-bg-color: var(--color-red-500);
    --btn-bg-color-hover: var(--color-red-600);
    --btn-text-color: var(--color-neutral-50);
    --btn-text-color-hover: var(--color-red-50);
    --btn-border-color: var(--color-red-500);
    --btn-border-color-hover: var(--color-red-600);
    --btn-bg-color-disabled: var(--color-neutral-200);
    --btn-text-color-disabled: var(--color-neutral-500);
  }
  .button {
    background-color: var(--btn-bg-color);
    display: flex;
    column-gap: 0.25rem;
    justify-content: center;
    align-items: center;
    color: var(--btn-text-color);
    padding: 0.375rem 1rem;
    border-radius: 0.375rem;
    text-align: center;
  }
  .icon-button {
    background-color: var(--btn-bg-color);
    color: var(--btn-text-color);
    padding: 0.375rem 0.675rem;
    border-radius: 0.375rem;
  }
  .button:active {
    transform: translate(0.03125rem, 0.03125rem);
  }
  .button:hover {
    background-color: var(--btn-bg-color-hover);
    color: var(--btn-text-color-hover);
  }
  .button.disabled, .button.disabled:hover, .button.disabled:active, .icon-button.disabled, .icon-button.disabled:hover, .icon-button.disabled:active {
    background-color: var(--btn-bg-color-disabled);
    color: var(--btn-text-color-disabled);
    cursor: not-allowed;
    transform: none;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}
:root {
  --color-background: #f8fafc;
  --color-white: #ffffff;
  --color-neutral-50: #f2f2f2;
  --color-neutral-100: #dddddd;
  --color-neutral-200: #c8c8c8;
  --color-neutral-300: #b3b3b3;
  --color-neutral-400: #9e9e9e;
  --color-neutral-500: #888888;
  --color-neutral-600: #737373;
  --color-neutral-700: #5e5e5e;
  --color-neutral-800: #494949;
  --color-neutral-900: #343434;
  --color-primary-50: #f8fafc;
  --color-primary-100: #e9eff5;
  --color-primary-200: #cedde9;
  --color-primary-300: #a3c1d6;
  --color-primary-400: #729fbe;
  --color-primary-500: #5083a7;
  --color-primary-600: #3d698c;
  --color-primary-700: #325572;
  --color-primary-800: #2d495f;
  --color-primary-900: #293e51;
  --color-red-50: #edcccc;
  --color-red-100: #e6b3b3;
  --color-red-200: #e09999;
  --color-red-300: #cf7777;
  --color-red-400: #da7f7f;
  --color-red-500: #d14747;
  --color-red-600: #b73e3e;
  --color-red-700: #9d3535;
  --color-red-800: #832c2c;
  --color-red-900: #692424;
  --color-green-50: #e6f9ed;
  --color-green-100: #c3f0d6;
  --color-green-200: #8ee6b7;
  --color-green-300: #5edb9b;
  --color-green-400: #2fc97a;
  --color-green-500: #1fa463;
  --color-green-600: #18804e;
  --color-green-700: #156642;
  --color-green-800: #124f36;
  --color-green-900: #0e3a29;
}
html {
  font-size: 16px;
}
div.tiptap:focus-visible {
  outline: none;
}
* {
  scrollbar-color: var(--color-neutral-200) transparent;
  scrollbar-width: thin;
}
.typography-body1 {
  font-size: 1rem;
  line-height: 140%;
}
.typography-body2 {
  font-size: 0.875rem;
  line-height: 140%;
}
.typography-body3 {
  font-size: 0.75rem;
  line-height: 140%;
}
.typography-body4 {
  font-size: 0.625rem;
  line-height: 160%;
}
.typography-button1 {
  font-size: 1rem;
  line-height: 110%;
}
.typography-button2 {
  font-size: 0.875rem;
  line-height: 110%;
}
.typography-button3 {
  font-size: 0.75rem;
  line-height: 110%;
}
.typography-link {
  font-size: 1rem;
  line-height: 140%;
}
.accordion-content {
  overflow: hidden;
}
.accordion-content[data-state="open"] {
  animation: slideDown 200ms ease-out;
}
.accordion-content[data-state="closed"] {
  animation: slideUp 200ms ease-out;
}
@keyframes slideDown {
  from {
    height: 0;
  }
  to {
    height: var(--radix-accordion-content-height);
  }
}
@keyframes slideUp {
  from {
    height: var(--radix-accordion-content-height);
  }
  to {
    height: 0;
  }
}
.hide-input-arrow[type="number"]::-webkit-outer-spin-button, .hide-input-arrow[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
.hide-input-arrow[type="number"] {
  -moz-appearance: textfield;
}
.rich-text-editor .ProseMirror {
  outline: none;
  line-height: 1.6;
}
.rich-text-editor .ProseMirror h1 {
  font-size: 1.5rem;
  font-weight: 700;
  margin: 0.5rem 0;
  line-height: 1.2;
}
.rich-text-editor .ProseMirror h2 {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0.5rem 0;
  line-height: 1.3;
}
.rich-text-editor .ProseMirror h3 {
  font-size: 1.125rem;
  font-weight: 600;
  margin: 0.5rem 0;
  line-height: 1.4;
}
.rich-text-editor .ProseMirror p {
  margin: 0.25rem 0;
}
.rich-text-editor .ProseMirror ul {
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}
.rich-text-editor .ProseMirror ol {
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}
.rich-text-editor .ProseMirror li {
  margin: 0.25rem 0;
}
.rich-text-editor .ProseMirror a {
  color: var(--color-primary-500);
  text-decoration: underline;
  cursor: pointer;
}
.rich-text-editor .ProseMirror a:hover {
  color: var(--color-primary-600);
}
.rich-text-editor .ProseMirror strong {
  font-weight: 700;
}
.rich-text-editor .ProseMirror em {
  font-style: italic;
}
.rich-text-editor .ProseMirror u {
  text-decoration: underline;
}
.rich-text-editor .ProseMirror s {
  text-decoration: line-through;
}
.rich-text-editor .ProseMirror sup {
  font-size: 0.75em;
  vertical-align: super;
}
.rich-text-editor .ProseMirror sub {
  font-size: 0.75em;
  vertical-align: sub;
}
.rich-text-editor .ProseMirror ol, .rich-text-editor .ProseMirror ul {
  list-style-position: outside;
}
.rich-text-editor .ProseMirror ol {
  list-style: decimal;
}
.rich-text-editor .ProseMirror ul {
  list-style: disc;
}
.rich-text-editor .ProseMirror span[style*="font-size"] {
  display: inline;
}
.rich-text-editor .ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: var(--color-neutral-400);
  pointer-events: none;
  height: 0;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes collapsible-down {
  from {
    height: 0;
  }
  to {
    height: var(--radix-collapsible-content-height);
  }
}
@keyframes collapsible-up {
  from {
    height: var(--radix-collapsible-content-height);
  }
  to {
    height: 0;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
