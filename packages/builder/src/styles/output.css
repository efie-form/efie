*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.14 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: Inter, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

.pointer-events-none {
  pointer-events: none;
}

.visible {
  visibility: visible;
}

.invisible {
  visibility: hidden;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.inset-0 {
  inset: 0px;
}

.-top-2 {
  top: -0.5rem;
}

.bottom-0 {
  bottom: 0px;
}

.bottom-full {
  bottom: 100%;
}

.left-0 {
  left: 0px;
}

.left-1\/2 {
  left: 50%;
}

.left-2 {
  left: 0.5rem;
}

.right-0 {
  right: 0px;
}

.top-0 {
  top: 0px;
}

.top-1\/2 {
  top: 50%;
}

.top-full {
  top: 100%;
}

.z-10 {
  z-index: 10;
}

.z-20 {
  z-index: 20;
}

.z-50 {
  z-index: 50;
}

.z-\[100\] {
  z-index: 100;
}

.z-\[999\] {
  z-index: 999;
}

.z-\[99\] {
  z-index: 99;
}

.col-span-2 {
  grid-column: span 2 / span 2;
}

.mx-1 {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
}

.mx-4 {
  margin-left: 1rem;
  margin-right: 1rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}

.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-3 {
  margin-bottom: 0.75rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.me-2 {
  margin-inline-end: 0.5rem;
}

.ml-2 {
  margin-left: 0.5rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-3 {
  margin-top: 0.75rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-5 {
  margin-top: 1.25rem;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.grid {
  display: grid;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.aspect-square {
  aspect-ratio: 1 / 1;
}

.size-3\.5 {
  width: 0.875rem;
  height: 0.875rem;
}

.size-4 {
  width: 1rem;
  height: 1rem;
}

.size-6 {
  width: 1.5rem;
  height: 1.5rem;
}

.h-0 {
  height: 0px;
}

.h-1 {
  height: 0.25rem;
}

.h-10 {
  height: 2.5rem;
}

.h-12 {
  height: 3rem;
}

.h-14 {
  height: 3.5rem;
}

.h-16 {
  height: 4rem;
}

.h-2\.5 {
  height: 0.625rem;
}

.h-3 {
  height: 0.75rem;
}

.h-4 {
  height: 1rem;
}

.h-5 {
  height: 1.25rem;
}

.h-6 {
  height: 1.5rem;
}

.h-7 {
  height: 1.75rem;
}

.h-\[1px\] {
  height: 1px;
}

.h-\[3px\] {
  height: 3px;
}

.h-full {
  height: 100%;
}

.h-screen {
  height: 100vh;
}

.max-h-56 {
  max-height: 14rem;
}

.max-h-60 {
  max-height: 15rem;
}

.max-h-full {
  max-height: 100%;
}

.min-h-0 {
  min-height: 0px;
}

.min-h-20 {
  min-height: 5rem;
}

.min-h-32 {
  min-height: 8rem;
}

.min-h-64 {
  min-height: 16rem;
}

.min-h-full {
  min-height: 100%;
}

.w-0 {
  width: 0px;
}

.w-1\/2 {
  width: 50%;
}

.w-12 {
  width: 3rem;
}

.w-16 {
  width: 4rem;
}

.w-2\.5 {
  width: 0.625rem;
}

.w-20 {
  width: 5rem;
}

.w-24 {
  width: 6rem;
}

.w-28 {
  width: 7rem;
}

.w-3 {
  width: 0.75rem;
}

.w-3\/4 {
  width: 75%;
}

.w-32 {
  width: 8rem;
}

.w-4 {
  width: 1rem;
}

.w-6 {
  width: 1.5rem;
}

.w-64 {
  width: 16rem;
}

.w-8 {
  width: 2rem;
}

.w-80 {
  width: 20rem;
}

.w-\[200px\] {
  width: 200px;
}

.w-\[24rem\] {
  width: 24rem;
}

.w-\[40rem\] {
  width: 40rem;
}

.w-full {
  width: 100%;
}

.w-px {
  width: 1px;
}

.min-w-0 {
  min-width: 0px;
}

.min-w-\[120px\] {
  min-width: 120px;
}

.min-w-\[16px\] {
  min-width: 16px;
}

.min-w-\[24px\] {
  min-width: 24px;
}

.min-w-\[80px\] {
  min-width: 80px;
}

.min-w-48 {
  min-width: 12rem;
}

.max-w-40 {
  max-width: 10rem;
}

.max-w-4xl {
  max-width: 56rem;
}

.max-w-56 {
  max-width: 14rem;
}

.max-w-full {
  max-width: 100%;
}

.flex-1 {
  flex: 1 1 0%;
}

.flex-shrink-0 {
  flex-shrink: 0;
}

.shrink-0 {
  flex-shrink: 0;
}

.grow {
  flex-grow: 1;
}

.-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-x-full {
  --tw-translate-x: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-x-0\.5 {
  --tw-translate-x: 0.125rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.translate-y-1\/2 {
  --tw-translate-y: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.scale-100 {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.cursor-default {
  cursor: default;
}

.cursor-grab {
  cursor: grab;
}

.cursor-grabbing {
  cursor: grabbing;
}

.cursor-not-allowed {
  cursor: not-allowed;
}

.cursor-pointer {
  cursor: pointer;
}

.cursor-text {
  cursor: text;
}

.touch-none {
  touch-action: none;
}

.select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.resize {
  resize: both;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.content-start {
  align-content: flex-start;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-0\.5 {
  gap: 0.125rem;
}

.gap-1 {
  gap: 0.25rem;
}

.gap-1\.5 {
  gap: 0.375rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-3 {
  gap: 0.75rem;
}

.gap-4 {
  gap: 1rem;
}

.space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.self-stretch {
  align-self: stretch;
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-y-auto {
  overflow-y: auto;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.text-ellipsis {
  text-overflow: ellipsis;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-\[10px\] {
  border-radius: 10px;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-sm {
  border-radius: 0.125rem;
}

.rounded-t-lg {
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
}

.border {
  border-width: 1px;
}

.border-2 {
  border-width: 2px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-b-2 {
  border-bottom-width: 2px;
}

.border-e {
  border-inline-end-width: 1px;
}

.border-l-2 {
  border-left-width: 2px;
}

.border-r-2 {
  border-right-width: 2px;
}

.border-s {
  border-inline-start-width: 1px;
}

.border-t {
  border-top-width: 1px;
}

.border-t-2 {
  border-top-width: 2px;
}

.border-t-\[0\.5px\] {
  border-top-width: 0.5px;
}

.border-dashed {
  border-style: dashed;
}

.border-none {
  border-style: none;
}

.border-danger {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-red-500) r g b / var(--tw-border-opacity));
}

.border-danger-400 {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-red-400) r g b / var(--tw-border-opacity));
}

.border-neutral-100 {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-neutral-100) r g b / var(--tw-border-opacity));
}

.border-neutral-100\/30 {
  border-color: rgb(from var(--color-neutral-100) r g b / 0.3);
}

.border-neutral-200 {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-neutral-200) r g b / var(--tw-border-opacity));
}

.border-neutral-300 {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-neutral-300) r g b / var(--tw-border-opacity));
}

.border-neutral-400 {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-neutral-400) r g b / var(--tw-border-opacity));
}

.border-primary {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-primary-500) r g b / var(--tw-border-opacity));
}

.border-primary-200 {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-primary-200) r g b / var(--tw-border-opacity));
}

.border-primary-400 {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-primary-400) r g b / var(--tw-border-opacity));
}

.border-success-400 {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-green-400) r g b / var(--tw-border-opacity));
}

.border-e-neutral-200 {
  --tw-border-opacity: 1;
  border-inline-end-color: rgb(from var(--color-neutral-200) r g b / var(--tw-border-opacity));
}

.border-t-neutral-400 {
  --tw-border-opacity: 1;
  border-top-color: rgb(from var(--color-neutral-400) r g b / var(--tw-border-opacity));
}

.border-t-neutral-800 {
  --tw-border-opacity: 1;
  border-top-color: rgb(from var(--color-neutral-800) r g b / var(--tw-border-opacity));
}

.border-opacity-0 {
  --tw-border-opacity: 0;
}

.\!bg-neutral-100 {
  --tw-bg-opacity: 1 !important;
  background-color: rgb(from var(--color-neutral-100) r g b / var(--tw-bg-opacity)) !important;
}

.\!bg-neutral-200\/80 {
  background-color: rgb(from var(--color-neutral-200) r g b / 0.8) !important;
}

.bg-danger {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-red-500) r g b / var(--tw-bg-opacity));
}

.bg-danger-100\/30 {
  background-color: rgb(from var(--color-red-100) r g b / 0.3);
}

.bg-danger-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-red-50) r g b / var(--tw-bg-opacity));
}

.bg-danger-50\/20 {
  background-color: rgb(from var(--color-red-50) r g b / 0.2);
}

.bg-neutral-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-neutral-100) r g b / var(--tw-bg-opacity));
}

.bg-neutral-100\/20 {
  background-color: rgb(from var(--color-neutral-100) r g b / 0.2);
}

.bg-neutral-100\/30 {
  background-color: rgb(from var(--color-neutral-100) r g b / 0.3);
}

.bg-neutral-100\/40 {
  background-color: rgb(from var(--color-neutral-100) r g b / 0.4);
}

.bg-neutral-100\/50 {
  background-color: rgb(from var(--color-neutral-100) r g b / 0.5);
}

.bg-neutral-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-neutral-200) r g b / var(--tw-bg-opacity));
}

.bg-neutral-300 {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-neutral-300) r g b / var(--tw-bg-opacity));
}

.bg-neutral-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-neutral-400) r g b / var(--tw-bg-opacity));
}

.bg-neutral-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-neutral-50) r g b / var(--tw-bg-opacity));
}

.bg-neutral-800 {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-neutral-800) r g b / var(--tw-bg-opacity));
}

.bg-primary {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-primary-500) r g b / var(--tw-bg-opacity));
}

.bg-primary-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-primary-100) r g b / var(--tw-bg-opacity));
}

.bg-primary-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-primary-200) r g b / var(--tw-bg-opacity));
}

.bg-primary-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-primary-400) r g b / var(--tw-bg-opacity));
}

.bg-primary-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-primary-50) r g b / var(--tw-bg-opacity));
}

.bg-success-50\/20 {
  background-color: rgb(from var(--color-green-50) r g b / 0.2);
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-opacity-0 {
  --tw-bg-opacity: 0;
}

.fill-neutral-400 {
  fill: rgb(from var(--color-neutral-400) r g b / 1);
}

.object-contain {
  -o-object-fit: contain;
     object-fit: contain;
}

.p-1 {
  padding: 0.25rem;
}

.p-1\.5 {
  padding: 0.375rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-2\.5 {
  padding: 0.625rem;
}

.p-3 {
  padding: 0.75rem;
}

.p-4 {
  padding: 1rem;
}

.p-\[2px\] {
  padding: 2px;
}

.px-0\.5 {
  padding-left: 0.125rem;
  padding-right: 0.125rem;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-1\.5 {
  padding-left: 0.375rem;
  padding-right: 0.375rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-0\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-1\.5 {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}

.py-12 {
  padding-top: 3rem;
  padding-bottom: 3rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-3\.5 {
  padding-top: 0.875rem;
  padding-bottom: 0.875rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.pe-1 {
  padding-inline-end: 0.25rem;
}

.pe-2 {
  padding-inline-end: 0.5rem;
}

.ps-1 {
  padding-inline-start: 0.25rem;
}

.ps-2 {
  padding-inline-start: 0.5rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-start {
  text-align: start;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.font-semibold {
  font-weight: 600;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

.italic {
  font-style: italic;
}

.text-danger {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-red-500) r g b / var(--tw-text-opacity));
}

.text-danger-400 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-red-400) r g b / var(--tw-text-opacity));
}

.text-danger-600 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-red-600) r g b / var(--tw-text-opacity));
}

.text-danger-700 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-red-700) r g b / var(--tw-text-opacity));
}

.text-neutral-200 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-neutral-200) r g b / var(--tw-text-opacity));
}

.text-neutral-300 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-neutral-300) r g b / var(--tw-text-opacity));
}

.text-neutral-400 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-neutral-400) r g b / var(--tw-text-opacity));
}

.text-neutral-50 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-neutral-50) r g b / var(--tw-text-opacity));
}

.text-neutral-500 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-neutral-500) r g b / var(--tw-text-opacity));
}

.text-neutral-600 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-neutral-600) r g b / var(--tw-text-opacity));
}

.text-neutral-700 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-neutral-700) r g b / var(--tw-text-opacity));
}

.text-neutral-800 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-neutral-800) r g b / var(--tw-text-opacity));
}

.text-neutral-900 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-neutral-900) r g b / var(--tw-text-opacity));
}

.text-primary {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-primary-500) r g b / var(--tw-text-opacity));
}

.text-primary-600 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-primary-600) r g b / var(--tw-text-opacity));
}

.text-primary-700 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-primary-700) r g b / var(--tw-text-opacity));
}

.text-primary-800 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-primary-800) r g b / var(--tw-text-opacity));
}

.text-success {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-green-500) r g b / var(--tw-text-opacity));
}

.text-success-200 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-green-200) r g b / var(--tw-text-opacity));
}

.text-success-600 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-green-600) r g b / var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.underline {
  text-decoration-line: underline;
}

.placeholder-neutral-400::-moz-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(from var(--color-neutral-400) r g b / var(--tw-placeholder-opacity));
}

.placeholder-neutral-400::placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(from var(--color-neutral-400) r g b / var(--tw-placeholder-opacity));
}

.opacity-0 {
  opacity: 0;
}

.opacity-50 {
  opacity: 0.5;
}

.opacity-60 {
  opacity: 0.6;
}

.opacity-70 {
  opacity: 0.7;
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-xl {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline {
  outline-style: solid;
}

.outline-2 {
  outline-width: 2px;
}

.-outline-offset-2 {
  outline-offset: -2px;
}

.\!outline-danger-400 {
  outline-color: rgb(from var(--color-red-400) r g b / 1) !important;
}

.\!outline-primary {
  outline-color: rgb(from var(--color-primary-500) r g b / 1) !important;
}

.outline-\[\#00000000\] {
  outline-color: #00000000;
}

.outline-neutral-100 {
  outline-color: rgb(from var(--color-neutral-100) r g b / 1);
}

.outline-primary {
  outline-color: rgb(from var(--color-primary-500) r g b / 1);
}

.ring-0 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.grayscale {
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.backdrop-blur-sm {
  --tw-backdrop-blur: blur(4px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-100 {
  transition-duration: 100ms;
}

.duration-200 {
  transition-duration: 200ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.will-change-transform {
  will-change: transform;
}

.primary {
  --btn-bg-color: var(--color-primary-500);
  --btn-bg-color-hover: var(--color-primary-600);
  --btn-text-color: var(--color-neutral-50);
  --btn-text-color-hover: var(--color-primary-50);
  --btn-border-color: var(--color-primary-500);
  --btn-border-color-hover: var(--color-primary-600);
  --btn-bg-color-disabled: var(--color-neutral-200);
  --btn-text-color-disabled: var(--color-neutral-500);
}

.secondary {
  --btn-bg-color: var(--color-neutral-100);
  --btn-bg-color-hover: var(--color-neutral-200);
  --btn-text-color: var(--color-neutral-700);
  --btn-text-color-hover: var(--color-neutral-800);
  --btn-border-color: var(--color-neutral-200);
  --btn-border-color-hover: var(--color-neutral-300);
  --btn-bg-color-disabled: var(--color-neutral-200);
  --btn-text-color-disabled: var(--color-neutral-600);
}

.danger {
  --btn-bg-color: var(--color-red-500);
  --btn-bg-color-hover: var(--color-red-600);
  --btn-text-color: var(--color-neutral-50);
  --btn-text-color-hover: var(--color-red-50);
  --btn-border-color: var(--color-red-500);
  --btn-border-color-hover: var(--color-red-600);
  --btn-bg-color-disabled: var(--color-neutral-200);
  --btn-text-color-disabled: var(--color-neutral-500);
}

.button {
  background-color: var(--btn-bg-color);
  display: flex;
  -moz-column-gap: 0.25rem;
       column-gap: 0.25rem;
  justify-content: center;
  align-items: center;
  color: var(--btn-text-color);
  padding: 0.375rem 1rem;
  border-radius: 0.375rem;
  text-align: center;
}

.icon-button {
  background-color: var(--btn-bg-color);
  color: var(--btn-text-color);
  padding: 0.375rem 0.675rem;
  border-radius: 0.375rem;
}

.button:active {
  transform: translate(0.03125rem, 0.03125rem);
}

.button:hover {
  background-color: var(--btn-bg-color-hover);
  color: var(--btn-text-color-hover);
}

.button.disabled,
.button.disabled:hover,
.button.disabled:active,
.icon-button.disabled,
.icon-button.disabled:hover,
.icon-button.disabled:active {
  background-color: var(--btn-bg-color-disabled);
  color: var(--btn-text-color-disabled);
  cursor: not-allowed;
  transform: none;
}

:root {
  --color-background: #f8fafc;
  --color-white: #ffffff;
  --color-neutral-50: #f2f2f2;
  --color-neutral-100: #dddddd;
  --color-neutral-200: #c8c8c8;
  --color-neutral-300: #b3b3b3;
  --color-neutral-400: #9e9e9e;
  --color-neutral-500: #888888;
  --color-neutral-600: #737373;
  --color-neutral-700: #5e5e5e;
  --color-neutral-800: #494949;
  --color-neutral-900: #343434;
  --color-primary-50: #f8fafc;
  --color-primary-100: #e9eff5;
  --color-primary-200: #cedde9;
  --color-primary-300: #a3c1d6;
  --color-primary-400: #729fbe;
  --color-primary-500: #5083a7;
  --color-primary-600: #3d698c;
  --color-primary-700: #325572;
  --color-primary-800: #2d495f;
  --color-primary-900: #293e51;
  --color-red-50: #edcccc;
  --color-red-100: #e6b3b3;
  --color-red-200: #e09999;
  --color-red-400: #da7f7f;
  --color-red-500: #d14747;
  --color-red-600: #b73e3e;
  --color-red-300: #cf7777;
  --color-red-700: #9d3535;
  --color-red-800: #832c2c;
  --color-red-900: #692424;
  --color-green-50: #e6f9ed;
  --color-green-100: #c3f0d6;
  --color-green-200: #8ee6b7;
  --color-green-300: #5edb9b;
  --color-green-400: #2fc97a;
  --color-green-500: #1fa463;
  --color-green-600: #18804e;
  --color-green-700: #156642;
  --color-green-800: #124f36;
  --color-green-900: #0e3a29;
}

html {
  font-size: 16px;
}

div.tiptap:focus-visible {
  outline: none;
}

* {
  scrollbar-color: var(--color-neutral-200) transparent;
  scrollbar-width: thin;
}

.typography-body1 {
  font-size: 1rem;
  line-height: 140%;
}

.typography-body2 {
  font-size: 0.875rem;
  line-height: 140%;
}

.typography-body3 {
  font-size: 0.75rem;
  line-height: 140%;
}

.typography-body4 {
  font-size: 0.625rem;
  line-height: 160%;
}

.typography-button1 {
  font-size: 1rem;
  line-height: 110%;
}

.typography-button2 {
  font-size: 0.875rem;
  line-height: 110%;
}

.typography-button3 {
  font-size: 0.75rem;
  line-height: 110%;
}

.typography-link {
  font-size: 1rem;
  line-height: 140%;
}

/* styles.css */

.accordion-content {
  overflow: hidden;
}

.accordion-content[data-state="open"] {
  animation: slideDown 200ms ease-out;
}

.accordion-content[data-state="closed"] {
  animation: slideUp 200ms ease-out;
}

@keyframes slideDown {
  from {
    height: 0;
  }

  to {
    height: var(--radix-accordion-content-height);
  }
}

@keyframes slideUp {
  from {
    height: var(--radix-accordion-content-height);
  }

  to {
    height: 0;
  }
}

.hide-input-arrow[type="number"]::-webkit-outer-spin-button,
.hide-input-arrow[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.hide-input-arrow[type="number"] {
  -moz-appearance: textfield;
}

/* Rich Text Editor Styles */

.rich-text-editor {
  /* Custom styles for TipTap editor content */
}

.rich-text-editor .ProseMirror {
  outline: none;
  line-height: 1.6;
}

.rich-text-editor .ProseMirror h1 {
  font-size: 1.5rem;
  font-weight: 700;
  margin: 0.5rem 0;
  line-height: 1.2;
}

.rich-text-editor .ProseMirror h2 {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0.5rem 0;
  line-height: 1.3;
}

.rich-text-editor .ProseMirror h3 {
  font-size: 1.125rem;
  font-weight: 600;
  margin: 0.5rem 0;
  line-height: 1.4;
}

.rich-text-editor .ProseMirror p {
  margin: 0.25rem 0;
}

.rich-text-editor .ProseMirror ul {
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}

.rich-text-editor .ProseMirror ol {
  padding-left: 1.5rem;
  margin: 0.5rem 0;
}

.rich-text-editor .ProseMirror li {
  margin: 0.25rem 0;
}

.rich-text-editor .ProseMirror a {
  color: var(--color-primary-500);
  text-decoration: underline;
  cursor: pointer;
}

.rich-text-editor .ProseMirror a:hover {
  color: var(--color-primary-600);
}

.rich-text-editor .ProseMirror strong {
  font-weight: 700;
}

.rich-text-editor .ProseMirror em {
  font-style: italic;
}

.rich-text-editor .ProseMirror u {
  text-decoration: underline;
}

.rich-text-editor .ProseMirror s {
  text-decoration: line-through;
}

.rich-text-editor .ProseMirror sup {
  font-size: 0.75em;
  vertical-align: super;
}

.rich-text-editor .ProseMirror sub {
  font-size: 0.75em;
  vertical-align: sub;
}

.rich-text-editor .ProseMirror ol,
.rich-text-editor .ProseMirror ul {
  list-style-position: outside;
}

.rich-text-editor .ProseMirror ol {
  list-style: decimal;
}

.rich-text-editor .ProseMirror ul {
  list-style: disc;
}

/* Font size support */

.rich-text-editor .ProseMirror [style*="font-size"] {
  /* Ensure font-size styles are preserved and rendered correctly */
}

.rich-text-editor .ProseMirror span[style*="font-size"] {
  display: inline;
}

/* Placeholder styling */

.rich-text-editor .ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: var(--color-neutral-400);
  pointer-events: none;
  height: 0;
}

.first\:rounded-t-md:first-child {
  border-top-left-radius: 0.375rem;
  border-top-right-radius: 0.375rem;
}

.last\:rounded-b-md:last-child {
  border-bottom-right-radius: 0.375rem;
  border-bottom-left-radius: 0.375rem;
}

.focus-within\:outline:focus-within {
  outline-style: solid;
}

.focus-within\:outline-1:focus-within {
  outline-width: 1px;
}

.focus-within\:outline-primary:focus-within {
  outline-color: rgb(from var(--color-primary-500) r g b / 1);
}

.hover\:scale-100:hover {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:scale-105:hover {
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:border-neutral-300:hover {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-neutral-300) r g b / var(--tw-border-opacity));
}

.hover\:border-primary:hover {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-primary-500) r g b / var(--tw-border-opacity));
}

.hover\:border-primary-400:hover {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-primary-400) r g b / var(--tw-border-opacity));
}

.hover\:bg-neutral-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-neutral-100) r g b / var(--tw-bg-opacity));
}

.hover\:bg-neutral-100\/50:hover {
  background-color: rgb(from var(--color-neutral-100) r g b / 0.5);
}

.hover\:bg-neutral-100\/70:hover {
  background-color: rgb(from var(--color-neutral-100) r g b / 0.7);
}

.hover\:bg-neutral-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-neutral-200) r g b / var(--tw-bg-opacity));
}

.hover\:bg-neutral-200\/30:hover {
  background-color: rgb(from var(--color-neutral-200) r g b / 0.3);
}

.hover\:bg-neutral-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-neutral-50) r g b / var(--tw-bg-opacity));
}

.hover\:bg-primary-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-primary-100) r g b / var(--tw-bg-opacity));
}

.hover\:bg-primary-300\/10:hover {
  background-color: rgb(from var(--color-primary-300) r g b / 0.1);
}

.hover\:text-danger:hover {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-red-500) r g b / var(--tw-text-opacity));
}

.hover\:text-neutral-500:hover {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-neutral-500) r g b / var(--tw-text-opacity));
}

.hover\:text-neutral-700:hover {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-neutral-700) r g b / var(--tw-text-opacity));
}

.hover\:text-neutral-800:hover {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-neutral-800) r g b / var(--tw-text-opacity));
}

.hover\:text-primary:hover {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-primary-500) r g b / var(--tw-text-opacity));
}

.focus\:bg-neutral-100:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-neutral-100) r g b / var(--tw-bg-opacity));
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:outline-primary:focus {
  outline-color: rgb(from var(--color-primary-500) r g b / 1);
}

.focus\:ring-0:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus-visible\:ring-2:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.group:focus-within .group-focus-within\:visible {
  visibility: visible;
}

.group:focus-within .group-focus-within\:border-neutral-500 {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-neutral-500) r g b / var(--tw-border-opacity));
}

.group:hover .group-hover\:visible {
  visibility: visible;
}

.group:hover .group-hover\:text-neutral-800 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-neutral-800) r g b / var(--tw-text-opacity));
}

.group:hover .group-hover\:text-primary-300 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-primary-300) r g b / var(--tw-text-opacity));
}

.group:hover .group-hover\:text-primary-400 {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-primary-400) r g b / var(--tw-text-opacity));
}

.group:hover .group-hover\:opacity-100 {
  opacity: 1;
}

.data-\[state\=checked\]\:translate-x-\[14px\][data-state="checked"] {
  --tw-translate-x: 14px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes collapsible-up {
  from {
    height: var(--radix-collapsible-content-height);
  }

  to {
    height: 0;
  }
}

.data-\[state\=closed\]\:animate-collapsible-up[data-state="closed"] {
  animation: collapsible-up 0.2s ease-out;
}

@keyframes collapsible-down {
  from {
    height: 0;
  }

  to {
    height: var(--radix-collapsible-content-height);
  }
}

.data-\[state\=open\]\:animate-collapsible-down[data-state="open"] {
  animation: collapsible-down 0.2s ease-out;
}

.data-\[disabled\]\:cursor-default[data-disabled] {
  cursor: default;
}

.data-\[disabled\]\:border-neutral-400[data-disabled] {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-neutral-400) r g b / var(--tw-border-opacity));
}

.data-\[state\=checked\]\:border-primary[data-state="checked"] {
  --tw-border-opacity: 1;
  border-color: rgb(from var(--color-primary-500) r g b / var(--tw-border-opacity));
}

.data-\[state\=active\]\:border-opacity-100[data-state="active"] {
  --tw-border-opacity: 1;
}

.data-\[disabled\]\:bg-neutral-400[data-disabled] {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-neutral-400) r g b / var(--tw-bg-opacity));
}

.data-\[state\=checked\]\:bg-primary[data-state="checked"] {
  --tw-bg-opacity: 1;
  background-color: rgb(from var(--color-primary-500) r g b / var(--tw-bg-opacity));
}

.data-\[state\=active\]\:text-primary[data-state="active"] {
  --tw-text-opacity: 1;
  color: rgb(from var(--color-primary-500) r g b / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .sm\:col-span-1 {
    grid-column: span 1 / span 1;
  }

  .sm\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

@media (min-width: 768px) {
  .md\:grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }
}

.\[\&\:not\(\:has\(div\[data-field\=true\]\:hover\)\)\]\:hover\:outline-neutral-100:hover:not(:has(div[data-field=true]:hover)) {
  outline-color: rgb(from var(--color-neutral-100) r g b / 1);
}

.\[\&_\.rcp-alpha-cursor\]\:h-4 .rcp-alpha-cursor {
  height: 1rem;
}

.\[\&_\.rcp-alpha-cursor\]\:w-4 .rcp-alpha-cursor {
  width: 1rem;
}

.\[\&_\.rcp-alpha-cursor\]\:-translate-x-2 .rcp-alpha-cursor {
  --tw-translate-x: -0.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.\[\&_\.rcp-alpha-cursor\]\:-translate-y-1 .rcp-alpha-cursor {
  --tw-translate-y: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.\[\&_\.rcp-alpha\]\:h-1\.5 .rcp-alpha {
  height: 0.375rem;
}

.\[\&_\.rcp-hue-cursor\]\:h-4 .rcp-hue-cursor {
  height: 1rem;
}

.\[\&_\.rcp-hue-cursor\]\:w-4 .rcp-hue-cursor {
  width: 1rem;
}

.\[\&_\.rcp-hue-cursor\]\:-translate-x-2 .rcp-hue-cursor {
  --tw-translate-x: -0.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.\[\&_\.rcp-hue-cursor\]\:-translate-y-1 .rcp-hue-cursor {
  --tw-translate-y: -0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.\[\&_\.rcp-hue\]\:h-1\.5 .rcp-hue {
  height: 0.375rem;
}

.\[\&_\.rcp-saturation-cursor\]\:h-4 .rcp-saturation-cursor {
  height: 1rem;
}

.\[\&_\.rcp-saturation-cursor\]\:w-4 .rcp-saturation-cursor {
  width: 1rem;
}

.\[\&_\.rcp-saturation-cursor\]\:-translate-x-2 .rcp-saturation-cursor {
  --tw-translate-x: -0.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.\[\&_\.rcp-saturation-cursor\]\:-translate-y-2 .rcp-saturation-cursor {
  --tw-translate-y: -0.5rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.\[\&_\.rcp-saturation\]\:rounded-md .rcp-saturation {
  border-radius: 0.375rem;
}
